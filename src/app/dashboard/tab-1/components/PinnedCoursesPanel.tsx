import React from "react";
import { ClassData } from "@/types/api";

interface Props {
  pinned: ClassData[];
  selected: ClassData | null;
  onSelect: (c: ClassData) => void;
}

export function PinnedCoursesPanel({ pinned, selected, onSelect }: Props) {
  return (
    <div className="flex flex-col w-1/5 pr-4 h-full border-r-2 border-gray-500 mr-4">
      <h2 className="text-xl mb-4 text-[#333333]">Pinned Courses</h2>
      <div className="flex-1 overflow-y-auto border rounded p-2">
        {pinned.length === 0 ? (
          <div className="flex-1 flex flex-col items-center justify-start pt-8">
            {/* SVG from your Figma (44×44) */}
            <svg
              className="w-11 h-11 mb-2"         // w-11 / h-11 = 44px × 44px; mb-2 = 8px bottom margin
              viewBox="0 0 44 44"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M11 5.5C7.975 5.5 5.5 7.96125 5.5 11V12.375C5.5 12.7397 5.64487 13.0894 5.90273 13.3473C6.16059 13.6051 6.51033 13.75 6.875 13.75C7.23967 13.75 7.58941 13.6051 7.84727 13.3473C8.10513 13.0894 8.25 12.7397 8.25 12.375V11C8.25 10.2707 8.53973 9.57118 9.05546 9.05546C9.57118 8.53973 10.2707 8.25 11 8.25H12.375C12.7397 8.25 13.0894 8.10513 13.3473 7.84727C13.6051 7.58941 13.75 7.23967 13.75 6.875C13.75 6.51033 13.6051 6.16059 13.3473 5.90273C13.0894 5.64487 12.7397 5.5 12.375 5.5H11ZM38.5 12.375V11C38.5 7.975 36.0387 5.5 33 5.5H31.625C31.2603 5.5 30.9106 5.64487 30.6527 5.90273C30.3949 6.16059 30.25 6.51033 30.25 6.875C30.25 7.23967 30.3949 7.58941 30.6527 7.84727C30.9106 8.10513 31.2603 8.25 31.625 8.25H33C33.7293 8.25 34.4288 8.53973 34.9445 9.05546C35.4603 9.57118 35.75 10.2707 35.75 11V12.375C35.75 12.7397 35.8949 13.0894 36.1527 13.3473C36.4106 13.6051 36.7603 13.75 37.125 13.75C37.4897 13.75 37.8394 13.6051 38.0973 13.3473C38.3551 13.0894 38.5 12.7397 38.5 12.375ZM33 38.5H31.625C31.2603 38.5 30.9106 38.3551 30.6527 38.0973C30.3949 37.8394 30.25 37.4897 30.25 37.125C30.25 36.7603 30.3949 36.4106 30.6527 36.1527C30.9106 35.8949 31.2603 35.75 31.625 35.75H33C33.7293 35.75 34.4288 35.4603 34.9445 34.9445C35.4603 34.4288 35.75 33.7293 35.75 33V31.625C35.75 31.2603 35.8949 30.9106 36.1527 30.6527C36.4106 30.3949 36.7603 30.25 37.125 30.25C37.4897 30.25 37.8394 30.3949 38.0973 30.6527C38.3551 30.9106 38.5 31.2603 38.5 31.625V33C38.5 36.025 36.0387 38.5 33 38.5ZM5.5 33C5.5 36.025 7.96125 38.5 11 38.5H12.375C12.7397 38.5 13.0894 38.3551 13.3473 38.0973C13.6051 37.8394 13.75 37.4897 13.75 37.125C13.75 36.7603 13.6051 36.4106 13.3473 36.1527C13.0894 35.8949 12.7397 35.75 12.375 35.75H11C10.2707 35.75 9.57118 35.4603 9.05546 34.9445C8.53973 34.4288 8.25 33.7293 8.25 33V31.625C8.25 31.2603 8.10513 30.9106 7.84727 30.6527C7.58941 30.3949 7.23967 30.25 6.875 30.25C6.51033 30.25 6.16059 30.3949 5.90273 30.6527C5.64487 30.9106 5.5 31.2603 5.5 31.625V33ZM19.25 6.875C19.25 6.51033 19.3949 6.16059 19.6527 5.90273C19.9106 5.64487 20.2603 5.5 20.625 5.5H23.375C23.7397 5.5 24.0894 5.64487 24.3473 5.90273C24.6051 6.16059 24.75 6.51033 24.75 6.875C24.75 7.23967 24.6051 7.58941 24.3473 7.84727C24.0894 8.10513 23.7397 8.25 23.375 8.25H20.625C20.2603 8.25 19.9106 8.10513 19.6527 7.84727C19.3949 7.58941 19.25 7.23967 19.25 6.875ZM8.25 20.625C8.25 20.2603 8.10513 19.9106 7.84727 19.6527C7.58941 19.3949 7.23967 19.25 6.875 19.25C6.51033 19.25 6.16059 19.3949 5.90273 19.6527C5.64487 19.9106 5.5 20.2603 5.5 20.625V23.375C5.5 23.7397 5.64487 24.0894 5.90273 24.3473C6.16059 24.6051 6.51033 24.75 6.875 24.75C7.23967 24.75 7.58941 24.6051 7.84727 24.3473C8.10513 24.0894 8.25 23.7397 8.25 23.375V20.625ZM19.25 37.125C19.25 36.7603 19.3949 36.4106 19.6527 36.1527C19.9106 35.8949 20.2603 35.75 20.625 35.75H23.375C23.7397 35.75 24.0894 35.8949 24.3473 36.1527C24.6051 36.4106 24.75 36.7603 24.75 37.125C24.75 37.4897 24.6051 37.8394 24.3473 38.0973C24.0894 38.3551 23.7397 38.5 23.375 38.5H20.625C20.2603 38.5 19.9106 38.3551 19.6527 38.0973C19.3949 37.8394 19.25 37.4897 19.25 37.125ZM38.5 20.625C38.5 20.2603 38.3551 19.9106 38.0973 19.6527C37.8394 19.3949 37.4897 19.25 37.125 19.25C36.7603 19.25 36.4106 19.3949 36.1527 19.6527C35.8949 19.9106 35.75 20.2603 35.75 20.625V23.375C35.75 23.7397 35.8949 24.0894 36.1527 24.3473C36.4106 24.6051 36.7603 24.75 37.125 24.75C37.4897 24.75 37.8394 24.6051 38.0973 24.3473C38.3551 24.0894 38.5 23.7397 38.5 23.375V20.625Z"
                fill="#999999"
              />
            </svg>

            {/* “No pinned courses” text in #999999 */}
            <p className="text-[#999999]">No pinned courses.</p>
          </div>
        ) : (
          <ul className="space-y-2">
            {pinned.map((c) => {
              const key = `${c.subject}:${c.catalog_nbr}`;
              const selKey = selected
                ? `${selected.subject}:${selected.catalog_nbr}`
                : null;
              const isSel = key === selKey;
              return (
                <li
                  key={key}
                  onClick={() => onSelect(c)}
                  className={
                    `p-2 rounded cursor-pointer ` +
                    (isSel ? "bg-gray-200" : "hover:bg-gray-100")
                  }
                >
                  {c.subject} {c.catalog_nbr} — {c.title}
                </li>
              );
            })}
          </ul>
        )}
      </div>
    </div>
  );
}
